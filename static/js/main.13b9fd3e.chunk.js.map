{"version":3,"sources":["helpers/randomEmoji.js","components/Player/Avatar/Avatar.js","components/Player/ScoreTotal/ScoreTotal.js","components/Player/ScoreList/ScoreList.js","components/Player/ScoreInput/ScoreInput.js","components/Player/Player.js","components/ControlsTray/ControlsTray.js","helpers/randomScores.js","App.js","index.js"],"names":["randomEmoji","animalEmojis","EmojiJson","filter","emoji","category","startsWith","unicode_version","randomEmojiItem","Math","floor","random","length","role","aria-label","description","Avatar","className","tabIndex","onClick","this","props","onAvatarClick","avatar","Component","ScoreTotal","total","ScoreList","scores","map","score","index","key","ScoreInput","handleScoreChange","bind","handleValueChange","event","inputValue","target","value","isNaN","Number","id","onNewScoreInput","newValue","type","placeholder","onChange","Player","newScore","ControlsTray","players","some","player","title","onRemovePlayer","disabled","round","onSubmitScoresClick","playerInputNotComplete","onAddPlayer","React","getRandomScores","scoreQuantity","limit","Array","from","App","addPlayer","setState","state","createNewPlayerObject","removePlayer","playersSansOne","splice","String","split","toString","randomScores","getRandomUniqueAvatar","maxPlayers","handleAvatarClick","handleSubmitScoresClick","handlePlayerNewScore","playerAddHandler","playerRemoveHandler","newRandomEmoji","playersWithNewScores","push","playersArray","data-active-players","reduce","newRoundActive","refreshVh","vh","window","innerHeight","document","documentElement","style","setProperty","ReactDOM","render","getElementById","addEventListener"],"mappings":"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","file":"static/js/main.13b9fd3e.chunk.js","sourcesContent":["import React from \"react\";\nimport EmojiJson from \"gemoji/db/emoji.json\";\n\nconst randomEmoji = () => {\n  // Emoji characters are contrained to version 8 and below to ensure maximum compatibility\n  // (We don't want the dreaded 'not currently available' horizontal bars on older devices...)\n  // (...this is also why we use the 'gemoji' package to utilize this version info in the JSON)\n  const animalEmojis = EmojiJson.filter(emoji => {\n    return emoji.category.startsWith(\"Animals\") && emoji.unicode_version <= 8;\n  });\n\n  const randomEmojiIndex = Math.floor(Math.random() * animalEmojis.length);\n  const randomEmojiItem = animalEmojis[randomEmojiIndex];\n\n  return (\n    <span role=\"img\" aria-label={randomEmojiItem.description}>\n      {randomEmojiItem.emoji}\n    </span>\n  );\n};\n\nexport default randomEmoji;\n","import React, { Component } from \"react\";\nimport \"./Avatar.css\";\n\nclass Avatar extends Component {\n  render() {\n    return (\n      <div\n        className=\"avatar\"\n        tabIndex={0}\n        aria-label=\"New Round\"\n        role=\"button\"\n        onClick={this.props.onAvatarClick}>\n        {this.props.avatar}\n      </div>\n    );\n  }\n}\n\nexport default Avatar;\n","import React, { Component } from \"react\";\nimport \"./ScoreTotal.css\";\n\nclass ScoreTotal extends Component {\n  render() {\n    return <div className=\"score-total\">{this.props.total}</div>;\n  }\n}\n\nexport default ScoreTotal;\n","import React, { Component } from \"react\";\nimport \"./ScoreList.css\";\n\nclass ScoreList extends Component {\n  render() {\n    return (\n      <ul className=\"score-list\">\n        {this.props.scores.map((score, index) => (\n          <li key={index} className={index === (this.props.scores.length - 1) ? \"score-list__score score-list__score--latest\" : \"score-list__score\"}>\n            { score }\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nexport default ScoreList;\n","import React, { Component } from \"react\";\nimport \"./ScoreInput.css\";\n\nimport { ReactComponent as CheckIcon } from \"feather-icons/dist/icons/check.svg\";\n\nclass ScoreInput extends Component {\n  constructor() {\n    super();\n    this.handleScoreChange = this.handleScoreChange.bind(this);\n    this.handleValueChange = this.handleValueChange.bind(this);\n  }\n\n  handleValueChange(event) {\n    const inputValue = event.target.value;\n    if (!isNaN(Number(inputValue)) || inputValue === \"\") {\n      this.handleScoreChange(this.props.id, inputValue);\n    }\n  }\n\n  handleScoreChange(id, score) {\n    this.props.onNewScoreInput(id, score);\n  }\n\n  render() {\n    return (\n      <div\n        className={\n          this.props.newValue !== \"\"\n            ? \"score-input score-input--completed\"\n            : \"score-input\"\n        }\n      >\n        <input\n          className=\"score-input__field\"\n          type=\"number\"\n          placeholder=\"Score?\"\n          value={this.props.newValue}\n          onChange={this.handleValueChange}\n        />\n        <div className=\"score-input__indicator\">\n          {this.props.newValue !== \"\" && <CheckIcon />}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ScoreInput;\n","import React, { Component } from \"react\";\n\nimport \"./Player.css\";\nimport Avatar from \"./Avatar/Avatar\";\nimport ScoreTotal from \"./ScoreTotal/ScoreTotal\";\nimport ScoreList from \"./ScoreList/ScoreList\";\nimport ScoreInput from \"./ScoreInput/ScoreInput\";\n\nclass Player extends Component {\n  render() {\n    return (\n      <div className=\"player\">\n        <div className=\"player__title\">\n          <Avatar\n            avatar={this.props.avatar}\n            onAvatarClick={() => this.props.onAvatarClick(this.props.id)}\n          />\n          <ScoreTotal total={this.props.total} />\n        </div>\n        <div className=\"player__body\">\n          <ScoreInput\n            onNewScoreInput={this.props.onNewScoreInput}\n            id={this.props.id}\n            newValue={this.props.newScore}\n          />\n          <ScoreList scores={this.props.scores} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Player;\n","import React from \"react\";\nimport \"./ControlsTray.css\";\nimport { ReactComponent as PlayerAddIcon } from \"feather-icons/dist/icons/user-plus.svg\";\nimport { ReactComponent as PlayerRemoveIcon } from \"feather-icons/dist/icons/user-minus.svg\";\nimport { ReactComponent as CheckIcon } from \"feather-icons/dist/icons/check.svg\";\nimport { ReactComponent as PlusIcon } from \"feather-icons/dist/icons/plus.svg\";\n\nclass ControlsTray extends React.Component {\n  playerInputNotComplete() {\n    return this.props.players.some(player => player.newScore === \"\");\n  }\n\n  render() {\n    return (\n      <div className=\"controls-tray\">\n        <button\n          aria-label=\"Remove Player\"\n          title=\"Remove Player\"\n          className=\"controls-tray__button\"\n          onClick={this.props.onRemovePlayer}\n          disabled={this.props.players.length <= 1}\n        >\n          <PlayerRemoveIcon />\n          <span className=\"controls-tray__label\">Remove Player</span>\n        </button>\n\n        <button\n          aria-label=\"Round Number\"\n          title={`Round Number: ${this.props.round}`}\n          className=\"controls-tray__button\"\n        >\n          <div className=\"controls-tray__round-icon\">{this.props.round}</div>\n          <span className=\"controls-tray__label\">Round Number</span>\n        </button>\n\n        <button\n          aria-label=\"Submit Scores\"\n          title=\"Submit Scores\"\n          className=\"controls-tray__button\"\n          onClick={this.props.onSubmitScoresClick}\n          disabled={this.playerInputNotComplete()}\n        >\n          {this.playerInputNotComplete() ? <PlusIcon /> : <CheckIcon />}\n          <span className=\"controls-tray__label\">Submit Scores</span>\n        </button>\n\n        <button\n          aria-label=\"Add Player\"\n          title=\"Add Player\"\n          className=\"controls-tray__button\"\n          onClick={this.props.onAddPlayer}\n          disabled={this.props.players.length >= 4}\n        >\n          <PlayerAddIcon />\n          <span className=\"controls-tray__label\">Add Player</span>\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default ControlsTray;\n","/**\n * Get an array of random scores (numbers) of your chosen length\n * @param Number scoreQuantity - how many scores you want returned\n * @param Number limit - what the upper limit of the random number should be\n */\nfunction getRandomScores(scoreQuantity = 5, limit = 100) {\n  return Array.from(\n    new Array(scoreQuantity) // new array of given length\n  ).map(() => Math.floor(Math.random() * limit)); // return new array with random numbers\n}\n\nexport default getRandomScores;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n\nimport randomEmoji from \"./helpers/randomEmoji\";\nimport Player from \"./components/Player/Player\";\nimport ControlsTray from \"./components/ControlsTray/ControlsTray\";\n\n// For testing / filling dummy data\nimport randomScores from \"./helpers/randomScores\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      maxPlayers: 4,\n      players: []\n    };\n\n    this.getRandomUniqueAvatar = this.getRandomUniqueAvatar.bind(this);\n    this.handleAvatarClick = this.handleAvatarClick.bind(this);\n    this.handleSubmitScoresClick = this.handleSubmitScoresClick.bind(this);\n    this.handlePlayerNewScore = this.handlePlayerNewScore.bind(this);\n    this.playerAddHandler = this.playerAddHandler.bind(this);\n    this.playerRemoveHandler = this.playerRemoveHandler.bind(this);\n  }\n\n  getRandomUniqueAvatar() {\n    let newRandomEmoji = randomEmoji();\n\n    const emojiIsUsed = this.state.players.some(\n      ({ avatar }) => avatar === newRandomEmoji\n    );\n\n    if (!emojiIsUsed) {\n      return newRandomEmoji;\n    }\n\n    this.getRandomUniqueAvatar();\n  }\n\n  handlePlayerNewScore(id, score) {\n    const players = this.state.players.map(player => {\n      if (player.id === id) {\n        player.newScore = score;\n      }\n\n      return player;\n    });\n\n    this.setState({\n      players\n    });\n  }\n\n  handleSubmitScoresClick() {\n    if (!this.state.players.some(player => player.newScore === \"\")) {\n      const playersWithNewScores = this.state.players.map(player => {\n        player.scores.push(player.newScore);\n        player.newScore = \"\";\n\n        return player;\n      });\n\n      this.setState({ players: [...playersWithNewScores] });\n    }\n  }\n\n  handleAvatarClick(id) {\n    const players = this.state.players.map(player => {\n      if (player.id === id) {\n        player.avatar = this.getRandomUniqueAvatar();\n      }\n\n      return player;\n    });\n\n    this.setState({ players });\n  }\n\n  addPlayer = () =>\n    this.setState({\n      players: [...this.state.players, this.createNewPlayerObject()]\n    });\n\n  removePlayer = () => {\n    const playersSansOne = this.state.players.splice(\n      0,\n      this.state.players.length - 1\n    );\n\n    this.setState({\n      players: [...playersSansOne]\n    });\n  };\n\n  createNewPlayerObject = () => ({\n    id: Number(String(Math.random()).split(\".\")[1]).toString(16),\n    scores: randomScores(10, 15),\n    avatar: this.getRandomUniqueAvatar(),\n    newScore: \"\"\n  });\n\n  UNSAFE_componentWillMount() {\n    const playersArray = [{}, {}, {}].map(player =>\n      this.createNewPlayerObject()\n    );\n\n    this.setState({ players: playersArray });\n  }\n\n  playerAddHandler() {\n    const currentNumberOfPlayers = this.state.players.length;\n    const maxReached = currentNumberOfPlayers >= this.state.maxPlayers;\n\n    if (!maxReached) {\n      this.addPlayer();\n    }\n  }\n\n  playerRemoveHandler() {\n    const currentNumberOfPlayers = this.state.players.length;\n    const minReached = currentNumberOfPlayers <= 1;\n\n    if (!minReached) {\n      this.removePlayer();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"app\" data-active-players={this.state.players.length}>\n        <div className=\"players\">\n          {this.state.players.map(player => {\n            return (\n              <Player\n                key={player.id}\n                {...player}\n                onAvatarClick={this.handleAvatarClick}\n                onNewScoreInput={this.handlePlayerNewScore}\n                total={player.scores.reduce((total, score) => total + score, 0)}\n              />\n            );\n          })}\n        </div>\n        <ControlsTray\n          onAddPlayer={this.playerAddHandler}\n          onRemovePlayer={this.playerRemoveHandler}\n          players={this.state.players}\n          round={this.state.players[0].scores.length + 1}\n          onSubmitScoresClick={this.handleSubmitScoresClick}\n          newRoundActive={this.state.newRoundActive}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nfunction refreshVh() {\n  let vh = window.innerHeight * 0.01;\n  document.documentElement.style.setProperty(\"--vh\", vh + \"px\");\n}\n\nwindow.addEventListener(\"resize\", refreshVh);\nrefreshVh();\n"],"sourceRoot":""}